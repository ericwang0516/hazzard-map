{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/eric/Documents/GitHub/hazzard-map/components/MapComponent.js"],"sourcesContent":["'use client';\n\nimport { useEffect, useRef, useState } from 'react';\nimport { \n  campusBounds, \n  buildings, \n  hazardData, \n  hazardTypes, \n  hazardLevels, \n  mapConfig \n} from '../data/mapData';\n\nexport default function MapComponent({ hazards = [] }) {\n  const mapRef = useRef(null);\n  const mapInstanceRef = useRef(null);\n  const [mapLoaded, setMapLoaded] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 初始化地圖\n  useEffect(() => {\n    const loadMap = async () => {\n      try {\n        const L = await import('leaflet');\n        \n        // 修復 Leaflet 圖示問題\n        delete L.default.Icon.Default.prototype._getIconUrl;\n        L.default.Icon.Default.mergeOptions({\n          iconRetinaUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon-2x.png',\n          iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\n          shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\n        });\n\n        if (!mapRef.current || mapInstanceRef.current) return;\n\n        console.log('初始化地圖...');\n        console.log('地圖容器尺寸:', mapRef.current.offsetWidth, 'x', mapRef.current.offsetHeight);\n        \n        // 等待容器有正確的尺寸\n        let retryCount = 0;\n        const maxRetries = 50; // 最多等待5秒\n        \n        const waitForContainer = () => {\n          if (mapRef.current.offsetWidth > 0 && mapRef.current.offsetHeight > 0) {\n            console.log('容器尺寸正確，開始初始化地圖');\n            console.log('最終容器尺寸:', mapRef.current.offsetWidth, 'x', mapRef.current.offsetHeight);\n            \n            try {\n              // 使用資料庫中的地圖配置\n              const map = L.default.map(mapRef.current).setView(mapConfig.center, mapConfig.zoom);\n              \n              if (!map) {\n                throw new Error('地圖初始化失敗');\n              }\n              \n              mapInstanceRef.current = map;\n              console.log('地圖對象創建成功:', map);\n            \n              // 添加地圖圖層\n              const tileLayer = L.default.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n                attribution: '© CartoDB, © OpenStreetMap contributors',\n                subdomains: 'abcd',\n                maxZoom: mapConfig.maxZoom\n              });\n              \n              if (tileLayer) {\n                tileLayer.addTo(map);\n                console.log('地圖圖層添加成功');\n              }\n\n              // 使用資料庫中的校園邊界\n              const rectangle = L.default.rectangle(campusBounds.bounds, campusBounds.style);\n              \n              if (rectangle) {\n                rectangle.addTo(map).bindPopup(campusBounds.name);\n                console.log('校園邊界添加成功');\n              }\n\n              // 使用資料庫中的建築物標記\n              buildings.forEach((building, index) => {\n                const marker = L.default.marker([building.lat, building.lng]);\n                if (marker) {\n                  const popupContent = `\n                    <div style=\"text-align: center;\">\n                      <h4 style=\"margin: 0 0 8px 0; color: #333;\">${building.name}</h4>\n                      <p style=\"margin: 4px 0; color: #666;\">${building.description}</p>\n                      <p style=\"margin: 4px 0; color: #888; font-size: 0.9rem;\">類型: ${building.type === 'academic' ? '學術建築' : '設施建築'}</p>\n                    </div>\n                  `;\n                  marker.addTo(map).bindPopup(popupContent);\n                  console.log(`建築物標記 ${index + 1} 添加成功:`, building.name);\n                }\n              });\n\n              setMapLoaded(true);\n              console.log('地圖初始化完成');\n              \n              // 強制重新計算地圖大小\n              setTimeout(() => {\n                if (map && map.invalidateSize) {\n                  map.invalidateSize();\n                  console.log('地圖大小已重新計算');\n                }\n              }, 100);\n              \n            } catch (mapError) {\n              console.error('地圖初始化錯誤:', mapError);\n              setError(mapError.message);\n            }\n            \n          } else {\n            retryCount++;\n            console.log(`容器尺寸為0，等待... (${retryCount}/${maxRetries})`, mapRef.current.offsetWidth, 'x', mapRef.current.offsetHeight);\n            \n            if (retryCount >= maxRetries) {\n              console.error('等待容器尺寸超時，強制初始化地圖');\n              // 強制設置容器尺寸\n              mapRef.current.style.width = '100%';\n              mapRef.current.style.height = '300px';\n              \n              try {\n                // 使用資料庫中的地圖配置\n                const map = L.default.map(mapRef.current).setView(mapConfig.center, mapConfig.zoom);\n                \n                if (!map) {\n                  throw new Error('強制初始化地圖失敗');\n                }\n                \n                mapInstanceRef.current = map;\n                console.log('強制初始化地圖對象創建成功:', map);\n              \n                // 添加地圖圖層\n                const tileLayer = L.default.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {\n                  attribution: '© CartoDB, © OpenStreetMap contributors',\n                  subdomains: 'abcd',\n                  maxZoom: mapConfig.maxZoom\n                });\n                \n                if (tileLayer) {\n                  tileLayer.addTo(map);\n                  console.log('強制初始化地圖圖層添加成功');\n                }\n\n                // 使用資料庫中的校園邊界\n                const rectangle = L.default.rectangle(campusBounds.bounds, campusBounds.style);\n                \n                if (rectangle) {\n                  rectangle.addTo(map).bindPopup(campusBounds.name);\n                  console.log('強制初始化校園邊界添加成功');\n                }\n\n                // 使用資料庫中的建築物標記\n                buildings.forEach((building, index) => {\n                  const marker = L.default.marker([building.lat, building.lng]);\n                  if (marker) {\n                    const popupContent = `\n                      <div style=\"text-align: center;\">\n                        <h4 style=\"margin: 0 0 8px 0; color: #333;\">${building.name}</h4>\n                        <p style=\"margin: 4px 0; color: #666;\">${building.description}</p>\n                        <p style=\"margin: 4px 0; color: #888; font-size: 0.9rem;\">類型: ${building.type === 'academic' ? '學術建築' : '設施建築'}</p>\n                      </div>\n                    `;\n                    marker.addTo(map).bindPopup(popupContent);\n                    console.log(`強制初始化建築物標記 ${index + 1} 添加成功:`, building.name);\n                  }\n                });\n\n                setMapLoaded(true);\n                console.log('地圖強制初始化完成');\n                \n                // 強制重新計算地圖大小\n                setTimeout(() => {\n                  if (map && map.invalidateSize) {\n                    map.invalidateSize();\n                    console.log('地圖大小已重新計算');\n                  }\n                }, 100);\n                \n              } catch (forceMapError) {\n                console.error('強制初始化地圖錯誤:', forceMapError);\n                setError(forceMapError.message);\n              }\n            } else {\n              setTimeout(waitForContainer, 100);\n            }\n          }\n        };\n        \n        waitForContainer();\n\n      } catch (err) {\n        console.error('地圖載入錯誤:', err);\n        setError(err.message);\n      }\n    };\n\n    loadMap();\n\n    return () => {\n      if (mapInstanceRef.current) {\n        mapInstanceRef.current.remove();\n        mapInstanceRef.current = null;\n      }\n    };\n  }, []);\n\n  // 監聽視窗大小變化\n  useEffect(() => {\n    const handleResize = () => {\n      if (mapInstanceRef.current && mapInstanceRef.current.invalidateSize) {\n        setTimeout(() => {\n          if (mapInstanceRef.current && mapInstanceRef.current.invalidateSize) {\n            mapInstanceRef.current.invalidateSize();\n            console.log('視窗大小變化，地圖已更新');\n          }\n        }, 100);\n      }\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [mapLoaded]);\n\n  // 更新危險區域標記\n  useEffect(() => {\n    if (!mapInstanceRef.current || !mapLoaded) return;\n\n    const updateHazards = async () => {\n      try {\n        const L = await import('leaflet');\n        \n        // 檢查地圖實例是否有效\n        if (!mapInstanceRef.current || !mapInstanceRef.current.eachLayer) {\n          console.log('地圖實例無效，跳過更新危險區域');\n          return;\n        }\n        \n        // 清除現有危險標記\n        mapInstanceRef.current.eachLayer(layer => {\n          if (layer._hazardMarker) {\n            mapInstanceRef.current.removeLayer(layer);\n          }\n        });\n\n        // 使用資料庫中的危險區域資料\n        const hazardsToShow = hazards.length > 0 ? hazards : hazardData;\n        \n        hazardsToShow.forEach(hazard => {\n          const hazardType = hazardTypes[hazard.type];\n          const hazardLevel = hazardLevels[hazard.level];\n\n          // 創建危險標記\n          const icon = L.default.divIcon({\n            className: 'hazard-marker',\n            html: `<div style=\"\n              width: ${hazardLevel.size}px; \n              height: ${hazardLevel.size}px; \n              background-color: ${hazardType.color}; \n              border: 2px solid white; \n              border-radius: 50%; \n              box-shadow: 0 2px 4px rgba(0,0,0,0.3);\n            \"></div>`,\n            iconSize: [hazardLevel.size, hazardLevel.size],\n            iconAnchor: [hazardLevel.size/2, hazardLevel.size/2]\n          });\n\n          const marker = L.default.marker([hazard.lat, hazard.lng], { icon }).addTo(mapInstanceRef.current);\n          marker._hazardMarker = true;\n\n          // 創建雷達動畫圓圈\n          const radarCircle = L.default.circle([hazard.lat, hazard.lng], {\n            radius: hazardLevel.radarRadius,\n            color: hazardType.color,\n            fillColor: hazardType.color,\n            fillOpacity: 0.08,\n            weight: 1.5,\n            opacity: 0.4\n          }).addTo(mapInstanceRef.current);\n          \n          radarCircle._hazardMarker = true;\n\n          // 創建向外擴散的小圈\n          const expandingCircle = L.default.circle([hazard.lat, hazard.lng], {\n            radius: 3,\n            color: hazardType.color,\n            fillColor: hazardType.color,\n            fillOpacity: 0.4,\n            weight: 2,\n            opacity: 1\n          }).addTo(mapInstanceRef.current);\n          \n          expandingCircle._hazardMarker = true;\n\n          // 添加向外擴散動畫效果\n          let animationStep = 0;\n          const animateRadar = () => {\n            // 計算擴散圈的位置和大小\n            const progress = (animationStep % 80) / 80; // 0 到 1 的循環，80幀一個週期\n            const currentRadius = 3 + (hazardLevel.radarRadius - 3) * progress;\n            \n            // 使用緩動函數讓動畫更自然\n            const easeOut = 1 - Math.pow(1 - progress, 3);\n            const currentOpacity = 1 * (1 - easeOut);\n            const currentFillOpacity = 0.4 * (1 - easeOut);\n            \n            expandingCircle.setRadius(currentRadius);\n            expandingCircle.setStyle({\n              opacity: currentOpacity,\n              fillOpacity: currentFillOpacity\n            });\n            \n            animationStep++;\n            requestAnimationFrame(animateRadar);\n          };\n          \n          animateRadar();\n\n          const popupContent = `\n            <div style=\"text-align: center;\">\n              <h4 style=\"margin: 0 0 8px 0; color: #333;\">${hazard.name}</h4>\n              <p style=\"margin: 4px 0; color: #666;\">類型: ${hazardType.name}</p>\n              <p style=\"margin: 4px 0; color: #666;\">等級: ${hazardLevel.name}</p>\n              <p style=\"margin: 4px 0; color: #666;\">建築: ${hazard.building || '未指定'}</p>\n              <p style=\"margin: 4px 0; color: #888; font-size: 0.9rem;\">${hazard.description || ''}</p>\n              <p style=\"margin: 4px 0; color: #666;\">影響範圍: ${hazardLevel.radarRadius}公尺</p>\n            </div>\n          `;\n\n          marker.bindPopup(popupContent);\n        });\n\n      } catch (err) {\n        console.error('更新危險區域錯誤:', err);\n      }\n    };\n\n    updateHazards();\n  }, [hazards, mapLoaded]);\n\n  if (error) {\n    return (\n      <div className=\"map-error\">\n        地圖載入失敗: {error}\n      </div>\n    );\n  }\n\n  return (\n    <div \n      ref={mapRef} \n      className=\"map-container\"\n      style={{\n        width: '100%',\n        height: '100%',\n        minHeight: '100px',\n        minWidth: '300px'\n      }}\n    >\n      {!mapLoaded && (\n        <div className=\"map-loading\">\n          載入地圖中...\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}